{"version":3,"sources":["components/Recipe.js","App.js","index.js"],"names":["Recipe","recipe","label","image","url","ingredientLines","useState","lgShow","setLgShow","listItems","map","ingredients","key","uuidv4","className","src","alt","href","target","rel","Button","onClick","Modal","size","show","onHide","aria-labelledby","Header","closeButton","Body","Table","striped","bordered","hover","App","query","setQuery","recipes","setRecipes","radioValue","setRadioValue","APP_KEY","useEffect","getData","a","Axios","get","result","data","more","toast","error","autoClose","hits","handleChange","e","checkValue","value","result2","onSubmit","preventDefault","type","name","onChange","autoComplete","placeholder","ButtonGroup","toggle","style","width","radio","idx","ToggleButton","active","variant","checked","currentTarget","console","log","transition","Bounce","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f32026c8.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport {Modal, Button, Table} from 'react-bootstrap'\nimport { v4 as uuidv4 } from \"uuid\";\n\nfunction Recipe({ recipe }) {\n  const { label, image, url, ingredientLines } = recipe.recipe;\n  const [lgShow, setLgShow] = useState(false);\n\n  const listItems = ingredientLines.map((ingredients) => \n          <tr key={uuidv4()}>\n            <td>{ingredients}</td>\n            {/* <td>{ingredient.weight.toFixed(2)}</td> */}\n         </tr>\n  );\n\n    return (\n      <div className=\"recipe\">\n        <h2>{label}</h2>\n        <img src={image} alt={label} />\n        <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">\n          URL\n        </a>\n        <Button onClick={() => setLgShow(!lgShow)}>Ingredients</Button>\n              <Modal\n                  size=\"lg\"\n                  show={lgShow}\n                  onHide={() => setLgShow(false)}\n                  aria-labelledby=\"example-modal-sizes-title-lg\"\n              >\n              <Modal.Header closeButton>\n              <h2>{label}</h2>\n              </Modal.Header>\n              <Modal.Body>\n              <Table striped bordered hover>\n                <thead>\n                  <tr>\n                    <th>Content</th>\n                    {/* <th>Weight</th> */}\n                  </tr>\n                </thead>\n                <tbody>\n                    {listItems}\n                </tbody>\n                </Table>\n              </Modal.Body>\n              </Modal>\n        </div>\n    )\n}\n\nexport default Recipe;","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Axios from \"axios\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport '../node_modules/bootstrap/dist/js/bootstrap.bundle';\nimport Recipe from \"./components/Recipe\";\nimport  'bootstrap/dist/css/bootstrap.min.css';\nimport { ButtonGroup, ToggleButton, Button, Modal } from 'react-bootstrap';\n\nimport { ToastContainer, toast, Slide, Zoom, Flip, Bounce } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nfunction App() {\n  const [query, setQuery] = useState(\"porridge\");\n  const [recipes, setRecipes] = useState([]);\n  const [radioValue, setRadioValue] = useState('1');\n\n  const radios = [\n    { name: 'Chicken', value: 'chicken'},\n    { name: 'Bread', value: 'bread' },\n    { name: 'Fish', value: 'fish' },\n    { name: 'Soup', value: 'soup' },\n    { name: 'Rice', value: 'rice' },\n    { name: 'Meat', value: 'meat' }\n  ];\n  \n  // Pranav APP\n  const APP_ID = \"38f841c8\";\n  const APP_KEY = \"e70408d70bb64c823b13311009bff1b8\t\";\n\n  const url = `https://cors-anywhere.herokuapp.com/https://api.edamam.com/search?q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}&from=0&to=12`;\n\n  useEffect(() => {\n    getData();\n  }, [])\n\n  const getData = async () => {\n    if (query !== \"\") {\n      const result = await Axios.get(url)\n      if (!result.data.more) {\n        return toast.error('No such food', {\n          autoClose: 2000\n        }, setQuery(\"\"))\n      }\n      setRecipes(result.data.hits);\n      setQuery(\"\");\n    } else {\n      toast.error(\"Input can't be empty\", {\n        autoClose: 2000\n      })\n    }\n  };\n\n  const onChange = e => \n  {\n    setQuery(e.target.value);\n  }\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    getData();\n  };\n\n  const handleChange = async (e) => {\n    let checkValue = e.target.value;\n      const result2 = await Axios.get(`https://cors-anywhere.herokuapp.com/https://api.edamam.com/search?q=${checkValue}&app_id=${APP_ID}&app_key=${APP_KEY}&from=0&to=12`);\n      setRecipes(result2.data.hits);\n  }\n\n  return (\n    <>\n    <div className=\"App animated\" >\n\n     <div className=\"background\">\n\n     <form onSubmit={onSubmit} className=\"search-form\">\n       <input\n         type=\"text\"\n         name=\"query\"\n         onChange={onChange}\n         value={query}\n         autoComplete=\"off\"\n         placeholder=\"Search Food\"\n       />\n       <input type=\"submit\" value=\"Search\" />\n       <br/>\n     </form>\n\n     {/* Button Value */}\n     <ButtonGroup toggle style={{width:'100%'}}>\n        {radios.map((radio, idx) => (\n          <ToggleButton\n            key={idx}\n            type=\"radio\"\n            active=\"true\"\n            variant=\"light\"\n            name=\"radio\"\n            value={radio.value}\n            checked={radioValue === radio.value}\n            onChange={(e) => {\n              handleChange(e);\n              setRadioValue(e.currentTarget.value);\n            }}\n            size=\"lg\"\n          >\n            {radio.name}\n          </ToggleButton>\n        ))}\n      </ButtonGroup>\n     {/* Button Value Ends */}\n     </div>\n\n      <div className=\"recipes\">\n        { console.log('RECIPES', recipes)}\n        {recipes !== [] && recipes.map(recipe => <Recipe key={uuidv4()} recipe={recipe} />)}\n      </div>\n    </div> \n    <ToastContainer transition={Bounce} \n    className = 'toast-background'/>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}